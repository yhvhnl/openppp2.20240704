name: Build OpenPPP2 for MIPSEL (OpenWRT)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-22.04  # 可以改为 ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y g++ make git libssl-dev

      - name: Install MIPSEL cross compiler
        run: |
          sudo apt install -y g++-mipsel-linux-gnu

      - name: Build OpenPPP2 for mipsel
        run: |
          mkdir -p build
          echo "Compiling openppp2 for mipsel..."

          # 自动收集所有 cpp 文件
          CPP_FILES=$(find . -name '*.cpp')
          echo "Found CPP files:"
          echo "$CPP_FILES"
          if [ -z "$CPP_FILES" ]; then
            echo "No .cpp files found!"
            exit 1
          fi

          # 自动收集所有包含头文件的目录
          INCLUDE_DIRS=$(find . -type f -name '*.h' -exec dirname {} \; | sort -u)
          INCLUDES=""
          for dir in $INCLUDE_DIRS; do
            INCLUDES="$INCLUDES -I$dir"
          done
          
          # 加入 lwip 头文件路径
          INCLUDES="$INCLUDES -I./common/lwip/include"
          
          # 加入 Boost 头文件路径（假设 Boost 放在 ./third_party/boost 目录）
          INCLUDES="$INCLUDES -I./third_party/boost"
          
          # 加入 OpenSSL 头文件路径（如果 OpenSSL 安装在系统的标准路径下，一般不需要额外添加）
          INCLUDES="$INCLUDES -I/usr/include/openssl"
          
          echo "Include directories:"
          echo "$INCLUDES"

          # 编译静态二进制
          mipsel-linux-gnu-g++ -static -O2 -std=c++17 $INCLUDES $CPP_FILES -o build/ppp

          echo "Build finished:"
          ls -lh build/

      - name: Upload static binary
        uses: actions/upload-artifact@v4
        with:
          name: ppp-mipsel-static
          path: build/ppp
